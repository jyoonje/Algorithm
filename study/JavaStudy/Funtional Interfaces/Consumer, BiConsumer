package FunctionalInterfaceExam;

import java.util.Arrays;
import java.util.List;
import java.util.function.BiConsumer;
import java.util.function.Consumer;

public class ConsumerDemo {
    //인터페이스 이름이 소비자(Consumer)인 이유는 데이터(매개변수)를 소비(사용)하고 아무것도 생성(반환)하지 않기 때문.
    //출처: https://developer-talk.tistory.com/719 [DevStory:티스토리]

    public static void main(String[] args) {

        //consumer  -->  매개변수는 받지만, 반환값은 없다(void타입).  -->  매개변수는 단 한개이다.
        Consumer<String> c = (str) -> {
            System.out.println(str.toUpperCase());
        };
//        c.accept("sai");

        //BiConsumer   -->  매개변수를 두 개 받는다. 이외에는 Consumer인터페이스와 동일
        BiConsumer<String, String> bi = (str1, str2) -> {
            System.out.println(str1.concat(str2));
        };
//        bi.accept("hi", "hello");



        //두 개의 Consumer변수를 chaining 하기
        //요구사항 ==>  step-1: UpperCase로 변환  step-2: 길이 계산하기  --> 2개 혹은 더 많은 Consumer 사용 가능

        Consumer<String> c2 = (str) -> {
            System.out.println(str.length());
        };

        c.andThen(c2).accept("sai");     // c.accept("sai") => "SAI"  // c2.accept("sai") => 3
                                            // 출력결과 : SAI , 3

        List<String> names = Arrays.asList("정윤제", "김자바", "김재섭");
        names.forEach(name -> System.out.println(name));    // forEach 메소드는 Consumer 인터페이스를 매개변수로 받는다.


    }


}
