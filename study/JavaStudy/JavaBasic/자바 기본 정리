- 자바 기본

소스 파일 -> javac명령어 -> 바이트코드 파일(jvm이 이해할 수 있는 파일) -> java명령어 -> JVM이 특정 운영체제가 이해하는 기계어로 번역 -> 실행

*이클립스는 소스 파일을 저장(ctrl+s)하는 순간 자동 컴파일 됨
  -> 프로젝트 디렉토리/bin/ 디렉토리에 바이트코드 파일 저장됨.

src: 소스 파일이 저장되는 디렉토리
.java: 소스 파일
bin: 바이트코드 파일이 저장되는 디렉토리
.class: 바이트코드 파일

패키지를 사용하는 이유 - 소스 파일 및 바이트코드 파일을 쉽게 관리하기 위함이다.

-클래스

복수 개의 클래스 선언이 포함된 하나의 소스 파일을 컴파일 하면
(ex: package ch06 public class car{} public class Tire{} )
바이트코드 파일은 선언된 클래스의 수 만큼 생긴다.
하지만, 이 경우 주의할 점은 소스 파일명과 동일한 클래스만 public 클래스로 선언이 가능하다.

클래스의 두 가지 용도:
1. 라이브러리 클래스: 실행할 수 없으며 다른 클래스에서 이용하는 클래스
2. 실행 클래스: main() 메소드를 가지고 있는 실행 가능한 클래스

일반적으로 자바 프로그램은 하나의 실행 클래스와 여러 개의 라이브러리 클래스들로 구성되어, 실행클래스는 실행하면서 라이브러리 클래스를 내부에서 이용한다.

생성자 선언과 호출: 
( 클래스 변수 = new 클래스() ) 
new 연산자가 해당 클래스 타입의 객체 생성 후 생성자 호출
-> 생성자가 객체 초기화 ( 객체 초기화: 필드 초기화 또는 메소드 호출로 객체가 사용될 준비를 하는 것)
-> 생성자 실행 후 new 연산자가 객체의 주소를 리턴 -> 변수에 주소가 값으로 들어감

