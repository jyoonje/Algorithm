Django 프로젝트 구성요소


- manage.py
: Django 프로젝트 중 Django와 관련된 여러 가지 명령어를 써야할 때 사용하는 파일.
 manage.py 파일은 django.core.management 모듈로부터 execute_from_command_line이라는 함수를 가져와 사용자가 입력하는 명령어를 처리한다. 
manage.py 파일을 개발자가 건드릴 일은 거의 없으며, 그저 우리의 명령어를 처리해 주는 파일이라고 알고 있으면 될 것 같다.

- myweb
: myweb 폴더에는 여러가지 파일들이 있다.startproject로 만들어진 만큼 내 Django 프로젝트의 설정 및 기본적인 기능을 위한 파일들이 있다.
총 5개의 .py파일이 존재하는데, settings.py와 urls.py 파일에 대해 알아보겠다.

1) settings.py
: 프로젝트의 설정 파일이다. 설정 파일이니 프로젝트에서 설정할 수 있는 옵션들이 있다.
옵션들을 몇 가지 알아보자면, 
1. DEBUG = True
: 디버깅 모드에 대한 옵션이다. 이를 True로 설정해놓으면 디버깅 모드가 되는데, 
이는 우리가 만든 웹 결과물에서 어떤 페이지나 기능에 대한 에러가 발생했을 때 그 에러에 대한 메시지가 웹 페이지에 그대로 노출된다.

2. ALLOWDED_HOSTS
: 허용할 호스트 주소에 대한 내용을 넣는다. 여기서 호스트 주소란 우리가 만든 Django 프로젝트가 돌아가는 환경에 접속할 수 있는 주소이다.

3. INSTALLED_APPS
: 설치된 앱들을 등록하는 옵션이다. Django 프로젝트에서 사용할, 만든 앱들을 여기에 선언해 주어야 등록이 되어 프로젝트에 적용된다.


2) urls.py
: 우리 프로젝트의 url 주소를 등록해 놓는 파일이다.
내부를 살펴보면 다음과 같은 내용이 있다. : from django.urls import path
							   urlpatterns = [
									path('admin/', admin.site.urls
								]
위와 같이 path()를 통해 원하는 주소를 등록할 수 있다. 


- photo 
: photo 폴더를 살펴보면 6개의 파이썬 파일들과 migrations 폴더가 있다. 
이 파일들의 역할에 대해 이해하기 위해선 MTV 패턴에 대한 이해가 필요하다.
Django에서는 MTV 패턴으로 전반적인 개발을 진행한다.
여기서 어떤 패턴으로 개발을 진행한다는 것은 작업을 함에 있어 어느 정도 규칙과 같이 정해진 방식이 있고, 
그 방식을 따라가며 중간중간 방식이 요구하는 내용을 순서대로 채워 넣으며 개발을 한다는 것이다. (더 간편하고 쉽게 개발을 완성하기 위함이다.)

