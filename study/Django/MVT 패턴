MTV 패턴


MTV 패턴은 Model, Template, View의 약자이다. 

Model은 애플리케이션의 데이터와 관련된 부분을 다루고, 

Template은 사용자에게 보여지는 부분, 

View는 그 사이에서 Model 데이터를 Template으로 전달하고 Template에서 발생하는 이벤트를 처리하는 부분이다.



1) Model 

: 모델은 앱의 데이터와 관련된 부분을 다루는 영역이다. 

  조금 더 자세히 이해해 보자면 DB에 저장될 데이터의 모양을 정의하고 관련된 일부 기능들을 설정해 주는 영역이다.

 예를 들어, "사용자"라는 개체를 코드로 옮긴다면 사용자(아이디, 이름, 전화번호, 이메일, 나이, 성별) 과 같이 정의할 수 있다.

이렇게 개체의 특징들을 뽑아서 이를 구성하는 요소로 하는 것을 "모델링" 이라고한다.

"사용자"는 모델이 되며, 그 내부의 "아이디", "이름" 등은 모델의 구성 요소 혹은 속성이다.

모델을 데이터베이스에 적용시키면 그것은 테이블이 되며, 모델을 데이터베이스에 적용시키는 과정을 "마이그레이션"이라고 한다.


2) Template

: Django에서 템플릿은 사용자에게 보이는 부분이다. 

사용자에게 보이는 부분이라는 것은 웹 페이지의 골격, 즉 HTML로 작성된 부분이라는 것을 의미한다.

장고의 템플릿은 일반적인 HTML 작성과 99% 동일하다. 아주 작은 차이가 있는데, 이것은 장고의 장점이라고 할 수 있는 "템플릿 태그(Template Tag)"이다.

템플릿 태그의 개념은 HTML이 파이썬 코드로부터(즉, 장고 프로젝트로부터) 데이터를 바로 넘겨받아서 손쉽게 처리할 수 있는 도구이다.

HTML은 그저 마크업 언어이므로 정적인 웹 페이지만 보여준다. 

무언가를 넘겨받아서 웹 페이지에 보여주기 위해서는 자바스크립트와 같은 도구가 도와주어야 하는데, 장고에서는 아주 편하게도 파이썬으로부터 바로 데이터를 넘겨받을 수 있도록 하는 템플릿 태그가 있다.

템플릿 태그는 {}로 감싸는 형태로 생겼는데, 이 안에 데이터를 넣을 수도 있고 for나 if와 같은 파이썬의 기본적인 구문 또한 사용할 수 있는 편리한 기능이다.


3) View

: 장고의 뷰는 템플릿과 모델 사이를 이어주는 다리와 같은 역할을 한다.

아주 단편적인 역할만 보자면 뷰는 모델을 통해 데이터에 접근하여 템플릿으로부터 요청 받은 데이터를 뽑아와 템플릿에게 답변으로 보내준다.


















